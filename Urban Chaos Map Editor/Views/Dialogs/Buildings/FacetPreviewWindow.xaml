<Window x:Class="UrbanChaosMapEditor.Views.Dialogs.Buildings.FacetPreviewWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Facet Preview" Width="900" Height="600"
        Background="#202225"
        WindowStartupLocation="CenterOwner"
        AllowsTransparency="False"
        ResizeMode="CanResize">

    <Window.Resources>
        <SolidColorBrush x:Key="Fg" Color="White"/>
        <SolidColorBrush x:Key="Subtle" Color="#FFB0B0B0"/>

        <!-- Default text color -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource Fg}"/>
        </Style>

        <!-- Make ALL CheckBox captions white -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource Fg}"/>
        </Style>
        
        <Style x:Key="FlagCheckboxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource Fg}"/>
        </Style>
        
        <!-- Ensure any inline text inside ContentPresenter uses white -->
        <Style TargetType="ContentPresenter">
            <Setter Property="TextElement.Foreground" Value="{StaticResource Fg}"/>
        </Style>

        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="#333"/>
        </Style>

        <!-- DataGrid dark style + white headers -->
        <Style TargetType="DataGrid">
            <Setter Property="Foreground" Value="{StaticResource Fg}"/>
            <Setter Property="Background" Value="#282A2E"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="RowBackground" Value="#2F3136"/>
            <Setter Property="AlternatingRowBackground" Value="#32353B"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#2B2D31"/>
            <Setter Property="BorderBrush" Value="#3A3C41"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#2F3136"/>
            <Setter Property="BorderBrush" Value="#555"/>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#2F3136"/>
        </Style>
        <Style x:Key="WhiteCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <!-- 16x16 box with a custom tick -->
                            <Grid Width="16" Height="16" Margin="0,0,6,0">
                                <Border x:Name="Bd"
                                CornerRadius="3"
                                Background="#26282B"
                                BorderBrush="#9FA2A8"
                                BorderThickness="1"/>
                                <!-- white tick -->
                                <Path x:Name="Tick"
                              Data="M 3 8 L 7 12 L 13 4"
                              Stroke="White"
                              StrokeThickness="2"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              Visibility="Collapsed"/>
                                <!-- indeterminate dash -->
                                <Rectangle x:Name="Dash"
                                   Width="10" Height="2"
                                   Fill="White"
                                   RadiusX="1" RadiusY="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Visibility="Collapsed"/>
                            </Grid>

                            <ContentPresenter VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="White"/>
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <!-- checked = show tick -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Tick" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="White"/>
                            </Trigger>
                            <!-- indeterminate (three-state) = show dash -->
                            <Trigger Property="IsThreeState" Value="True"/>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="Dash" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="White"/>
                            </Trigger>
                            <!-- disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <!-- keyboard focus highlight (optional) -->
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="340"/>
            <ColumnDefinition Width="12"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- LEFT: Info panel -->
        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
            <StackPanel>

                <!-- Facet header -->
                <Border BorderThickness="1" CornerRadius="6" Padding="10" Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="Facet" FontWeight="Bold" FontSize="14"/>
                        <TextBlock x:Name="FacetIdText" Margin="0,6,0,0"/>
                        <StackPanel Orientation="Horizontal" Margin="0,2,0,0">
                            <TextBlock Text="Type:" Margin="0,0,6,0"/>
                            <ComboBox x:Name="FacetTypeCombo"
                                      Width="180"
                                      SelectionChanged="FacetTypeCombo_OnSelectionChanged"/>
                        </StackPanel>
                        <TextBlock x:Name="FacetCoordsText"/>
                        <TextBlock x:Name="FacetHeightText"/>
                        <!-- Keep the hex for debugging -->
                        <TextBlock x:Name="FacetFlagsText" Margin="0,6,0,2"/>

                        <!-- NEW: Flags as read-only checkboxes -->
                        <!-- NEW: Flags (editable) -->
                        <TextBlock Text="Flags:" FontWeight="SemiBold" Margin="0,6,0,2"/>
                        <ItemsControl x:Name="FlagsList">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Style="{StaticResource WhiteCheckBox}"
                                        Content="{Binding Name}"
                                        IsChecked="{Binding IsSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Tag="{Binding Bit}"
                                        Margin="0,2,12,2"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Border>

                <!-- Style section (RAW vs PAINTED) -->
                <Border BorderThickness="1" CornerRadius="6" Padding="10" Margin="0,0,0,10">
                    <StackPanel>
                        <TextBlock Text="Style" FontWeight="Bold" FontSize="14"/>
                        <TextBlock x:Name="StyleModeText" Margin="0,6,0,0"/>

                        <!-- NEW: recipe line used by code-behind (fixes missing name error) -->
                        <TextBlock x:Name="RecipeText" Margin="0,4,0,0" Foreground="{StaticResource Subtle}"/>

                        <!-- RAW -->
                        <StackPanel x:Name="RawStylePanel" Margin="0,6,0,0">
                            <TextBlock x:Name="RawStyleText"/>
                        </StackPanel>

                        <!-- PAINTED -->
                        <StackPanel x:Name="PaintedPanel" Margin="0,6,0,0" Visibility="Collapsed">
                            <TextBlock x:Name="PaintedSummaryText"/>
                            <TextBlock Text="Paint bytes (raw):" Margin="0,6,0,2" FontWeight="SemiBold"/>
                            <ScrollViewer Height="70" VerticalScrollBarVisibility="Auto">
                                <TextBlock x:Name="PaintBytesHexText" FontFamily="Consolas" TextWrapping="Wrap"/>
                            </ScrollViewer>

                            <TextBlock Text="Decoded per-byte:" Margin="0,10,0,4" FontWeight="SemiBold"/>
                            <DataGrid x:Name="PaintBytesGrid"
                                      AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      IsReadOnly="True"
                                      HeadersVisibility="Column"
                                      Height="160">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Index}" Header="#" Width="40"/>
                                    <DataGridTextColumn Binding="{Binding ByteHex}" Header="Byte" Width="70"/>

                                    <DataGridTextColumn Binding="{Binding Page}" Width="120">
                                        <DataGridTextColumn.Header>
                                            <TextBlock Text="Page (b&amp;0x7F)"/>
                                        </DataGridTextColumn.Header>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Binding="{Binding Flag}" Width="120">
                                        <DataGridTextColumn.Header>
                                            <TextBlock Text="Flag (b&amp;0x80)"/>
                                        </DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <TextBlock Text="(Scroll the preview if it's larger than the window.)"
                           Foreground="{StaticResource Subtle}"/>
            </StackPanel>
        </ScrollViewer>

        <!-- Spacer -->
        <Grid Grid.Column="1"/>

        <!-- RIGHT: Visual preview (exact pixels) -->
        <Border Grid.Column="2" BorderThickness="1" CornerRadius="6" Padding="8">
            <ScrollViewer x:Name="PreviewScroll"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          Background="#1E1F22">
                <Grid>
                    <!-- Panel canvas -->
                    <Canvas x:Name="PanelCanvas"
                            Background="#202225"
                            SnapsToDevicePixels="True"
                            ClipToBounds="True"/>
                    <!-- 64x64 grid -->
                    <Canvas x:Name="GridCanvas" IsHitTestVisible="False"/>
                </Grid>
            </ScrollViewer>
        </Border>
    </Grid>
</Window>
