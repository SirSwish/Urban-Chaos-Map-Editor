<Window x:Class="UrbanChaosMapEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:UrbanChaosMapEditor.Converters"
        xmlns:views="clr-namespace:UrbanChaosMapEditor.Views"
        xmlns:tabs="clr-namespace:UrbanChaosMapEditor.Views.EditorTabs"
        xmlns:models="clr-namespace:UrbanChaosMapEditor.Models"
        mc:Ignorable="d"
        Title="{Binding Title}"
        WindowStartupLocation="CenterScreen"
        Width="1280" Height="860"
        ResizeMode="CanResize">

    <!-- Local resources -->
    <Window.Resources>
        <!-- Added: converters referenced below -->
        <conv:NullToBoolConverter x:Key="NullToBool" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>

    <!-- Key bindings -->
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding LoadMapCommand}" />
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveMapCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveAsMapCommand}" />
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewMapCommand}" />
        <KeyBinding Gesture="Ctrl+G" Command="{Binding ToggleGridLinesCommand}" />
        <KeyBinding Gesture="Ctrl+M" Command="{Binding ToggleMapWhoCommand}" />
        <KeyBinding Gesture="Ctrl+0" Command="{Binding ResetZoomCommand}" />
        <KeyBinding Gesture="Ctrl+H" Command="{Binding ToggleHeightsCommand}" />
        <KeyBinding Gesture="Ctrl+T" Command="{Binding ToggleTexturesCommand}" />
        <KeyBinding Gesture="Ctrl+J" Command="{Binding ToggleObjectsCommand}" />
        <KeyBinding Key="Delete" Command="{Binding DeletePrimCommand}" />
        <KeyBinding Modifiers="Control" Key="L" Command="{Binding ToggleLightsCommand}" />
    </Window.InputBindings>

    <!-- Layout -->
    <DockPanel LastChildFill="True">

        <!-- Menu (top) -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">

                <!-- New -->
                <MenuItem Header="_New Map"
                          Command="{Binding NewMapCommand}"
                          InputGestureText="Ctrl+N">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/new.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="New _Lights"
                          Command="{Binding NewLightsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/new.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <!-- Open -->
                <MenuItem Header="_Open Map..."
                          Command="{Binding LoadMapCommand}"
                          InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/load.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Open _Lights..."
                          Command="{Binding LoadLightsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/load.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <!-- Save -->
                <MenuItem Header="_Save Map"
                          Command="{Binding SaveMapCommand}"
                          InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/save.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Save _Lights"
                          Command="{Binding SaveLightsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/save.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Save _All"
                          Command="{Binding SaveAllCommand}"
                          InputGestureText="Ctrl+Shift+S">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/save.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <!-- Save As -->
                <MenuItem Header="Save Map _As..."
                          Command="{Binding SaveAsMapCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/saveas.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Save Lights A_s..."
                          Command="{Binding SaveAsLightsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/saveas.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Save All _As..."
                          Command="{Binding SaveAllAsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/saveas.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <MenuItem Header="_Recent" SubmenuOpened="Recent_SubmenuOpened">
                    <!-- Hidden placeholder so WPF treats this as a header and will open the submenu -->
                    <Separator Visibility="Collapsed"/>
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/recent.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Exit -->
                <MenuItem Header="E_xit"
                          Command="{Binding ExitCommand}"
                          InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/exit.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

            </MenuItem>

            <MenuItem Header="_Edit">
                <!-- Heights -->
                <MenuItem Header="_Raise Height"   Command="{Binding Map.RaiseHeightCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/raise.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Lower Height"   Command="{Binding Map.LowerHeightCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/lower.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Level (click-drag)" Command="{Binding Map.LevelHeightCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/level.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Flatten Height (set 0)" Command="{Binding Map.FlattenHeightCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/flatten.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                
                <Separator/>

                <MenuItem Header="Delete Selected Prim"
                          Command="{Binding DeletePrimCommand}"
                          IsEnabled="{Binding Map.SelectedPrim, Converter={StaticResource NullToBool}}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/delete.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Object _Height..."
                          Click="PrimHeight_Click"
                          IsEnabled="{Binding Map.SelectedPrim, Converter={StaticResource NullToBool}}">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showprimheight.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Copy / Paste prims -->
                <MenuItem Header="_Copy Object"
                          InputGestureText="Ctrl+C"
                          Click="CopyPrim_Click">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/copyobject.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Paste Object"
                          InputGestureText="Ctrl+V"
                          Click="PastePrim_Click">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/pasteobject.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Lights -->
                <Separator/>

                <MenuItem Header="_Edit Light" Click="EditLight_Click">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/editlight.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <!-- disable when no light selected -->
                                <DataTrigger Binding="{Binding Map.SelectedLightIndex}" Value="-1">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>

                <MenuItem Header="_Delete Light" Click="DeleteLight_Click" InputGestureText="Del">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/delete.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Map.SelectedLightIndex}" Value="-1">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>

                <MenuItem Header="_Copy Light" Click="CopyLight_Click" InputGestureText="Ctrl+C">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/copyobject.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Map.SelectedLightIndex}" Value="-1">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>

                <MenuItem Header="_Paste Light" Click="PasteLight_Click" InputGestureText="Ctrl+V">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/pasteobject.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_View">
                <MenuItem Header="_Textures"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowTextures}"
                          Command="{Binding ToggleTexturesCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+T">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showtextures.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!-- Grid Lines -->
                <MenuItem Header="_Grid Lines"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowGridLines}"
                          Command="{Binding ToggleGridLinesCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+G">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showgrid.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Objects"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowObjects}"
                          Command="{Binding ToggleObjectsCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+J">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showobjects.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!-- MapWho -->
                <MenuItem Header="_MapWho"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowMapWho}"
                          Command="{Binding ToggleMapWhoCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+M">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showmapwho.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Heights"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowHeights}"
                          Command="{Binding ToggleHeightsCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+H">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/showheights.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Lights"
                          IsCheckable="True"
                          IsChecked="{Binding Map.ShowLights}"
                          Command="{Binding ToggleLightsCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                          InputGestureText="Ctrl+L">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/Assets/Icons/showlights.ico"/>
                    </MenuItem.Icon>
                </MenuItem>

                <Separator/>

                <!-- Reset Zoom -->
                <MenuItem Header="_Reset Zoom"
                          Command="{Binding ResetZoomCommand}"
                          InputGestureText="Ctrl+0">
                    <MenuItem.Icon>
                        <Image Source="/Assets/Icons/resetzoom.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Go to Cell..." Click="GoToCell_Click"/>
                <Separator/>

                <MenuItem Header="_Use Beta Textures"
                          IsCheckable="True"
                          IsChecked="{Binding Map.UseBetaTextures, Mode=TwoWay}">
                    <MenuItem.ToolTip>
                        <TextBlock Text="Switch between Release and Beta texture sets (requires textures preloaded)."/>
                    </MenuItem.ToolTip>
                </MenuItem>
            </MenuItem>

        </Menu>

        <!-- Status / Info Bar -->
        <Border DockPanel.Dock="Bottom"
                Height="22"
                Background="#861b2d"
                BorderThickness="0,1,0,0"
                BorderBrush="#660000">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <!-- left status -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- action -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- files -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- spacer pushes right side to edge -->
                    <ColumnDefinition Width="*"/>
                    <!-- coords -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- spinner -->
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Left: status text -->
                <TextBlock Grid.Column="0"
                           Text="{Binding StatusMessage}"
                           VerticalAlignment="Center"
                           Margin="8,0,0,0"
                           Foreground="White"
                           FontSize="12"/>

                <!-- Action status -->
                <TextBlock Grid.Column="1"
                           Margin="8,0"
                           VerticalAlignment="Center"
                           Foreground="White"
                           FontSize="12"
                           Text="{Binding EditorActionStatus}"/>

                <!-- Map/Lights file display -->
                <TextBlock Grid.Column="2"
                           Margin="8,0"
                           VerticalAlignment="Center"
                           Foreground="White"
                           FontSize="12"
                           Text="{Binding StatusFiles}"/>

                <!-- Right: coordinates -->
                <TextBlock Grid.Column="4"
                           Margin="0,0,8,0"
                           VerticalAlignment="Center"
                           Foreground="White"
                           FontSize="12">
                    <Run Text="X: "/>
                    <Run Text="{Binding Map.CursorX}"/>
                    <Run Text=" ("/>
                    <Run Text="{Binding Map.CursorTileX}"/>
                    <Run Text=")  Z: "/>
                    <Run Text="{Binding Map.CursorZ}"/>
                    <Run Text=" ("/>
                    <Run Text="{Binding Map.CursorTileZ}"/>
                    <Run Text=")"/>
                </TextBlock>

                <!-- Far right: tiny indeterminate spinner (only when busy) -->
                <ProgressBar Grid.Column="5"
                             Width="90"
                             Height="6"
                             Margin="0,0,8,0"
                             VerticalAlignment="Center"
                             IsIndeterminate="True"
                             Foreground="White"
                             Background="#770000"
                             Visibility="{Binding IsBusy, Converter={StaticResource BoolToVis}}"/>
            </Grid>
        </Border>

        <!-- CENTER: editor drawer (left) + map (right) -->
        <Grid>
            <Grid.ColumnDefinitions>
                <!-- Drawer column (resizable) -->
                <ColumnDefinition x:Name="EditorCol" Width="25.333"/>
                <ColumnDefinition Width="259.667"/>
                <!-- Splitter column -->
                <ColumnDefinition Width="6"/>
                <!-- Main content -->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Left fold-out editor drawer -->
            <Expander x:Name="EditorExpander"
              Grid.Column="0"
              IsExpanded="True"
              ExpandDirection="Right"
              Background="#222"
              Foreground="White"
              BorderBrush="#333"
              BorderThickness="0,0,1,0"
              Expanded="EditorExpander_Expanded"
              Collapsed="EditorExpander_Collapsed" Grid.ColumnSpan="2">

                <Expander.Header>
                    <TextBlock Text="Editor"
                       FontWeight="SemiBold"
                       Padding="4"
                       Foreground="White">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="-90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>

                <!-- Drawer content -->
                <Grid Background="#2b2b2b">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="107*"/>
                        <RowDefinition Height="92*"/>
                    </Grid.RowDefinitions>

                    <TabControl Grid.RowSpan="2">
                        <TabItem Header="Heights">
                            <tabs:HeightsTab/>
                        </TabItem>
                        <TabItem Header="Textures">
                            <tabs:TexturesTab/>
                        </TabItem>
                        <TabItem Header="Prims" Height="20" VerticalAlignment="Top">
                            <tabs:PrimsTab/>
                        </TabItem>
                        <TabItem Header="Lights">
                            <tabs:LightsTab/>
                        </TabItem>
                        <TabItem Header="Buildings">
                            <tabs:BuildingsTab/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Expander>

            <!-- The actual splitter that lets you drag to resize the drawer -->
            <GridSplitter Grid.Column="2"
                  Width="6"
                  HorizontalAlignment="Stretch"
                  Background="#22000000"
                  Cursor="SizeWE"
                  ShowsPreview="True"
                  ResizeDirection="Columns"
                  ResizeBehavior="PreviousAndNext"
                  Visibility="{Binding IsExpanded, ElementName=EditorExpander, Converter={StaticResource BoolToVis}}"/>

            <!-- Map goes in the MAIN content column (index 2) -->
            <views:MapView x:Name="MapViewControl"
                   Grid.Column="3"
                   DataContext="{Binding Map}"/>
        </Grid>

    </DockPanel>
</Window>
