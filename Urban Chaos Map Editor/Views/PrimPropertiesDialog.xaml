<Window x:Class="UrbanChaosMapEditor.Views.PrimPropertiesDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Prim Properties" SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterOwner"
        Background="#2b2b2b" Foreground="White">
    <Window.Resources>
        <!-- Your custom white check template (the one you said looks good) -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="16" Height="16"
                                    Background="Black"
                                    BorderBrush="White"
                                    BorderThickness="1">
                                <Path x:Name="CheckMark"
                                      Data="M0,4 L2,6 6,0"
                                      Stroke="White"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Margin="6,0,0,0"
                                              VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Make the two dialog buttons readable (black text) -->
        <Style x:Key="DialogButton" TargetType="Button">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#DDDDDD"/>
            <Setter Property="BorderBrush" Value="#666666"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="MinWidth" Value="90"/>
        </Style>
    </Window.Resources>

    <Grid Margin="12" Width="360">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical" Margin="0,0,0,8">
            <TextBlock Text="Flags" FontWeight="SemiBold" Margin="0,0,0,6"/>

            <!-- Two columns for flags -->
            <UniformGrid Columns="2" Rows="4" Margin="0,0,0,8">
                <CheckBox Content="On floor"         IsChecked="{Binding OnFloor}"/>
                <CheckBox Content="Searchable"       IsChecked="{Binding Searchable}"/>

                <CheckBox Content="Not on PSX"       IsChecked="{Binding NotOnPsx}"/>
                <CheckBox Content="Damaged"          IsChecked="{Binding Damaged}"/>

                <CheckBox Content="Warehouse"        IsChecked="{Binding Warehouse}"/>
                <CheckBox Content="Hidden item"      IsChecked="{Binding HiddenItem}"/>

                <CheckBox Content="Reserved 1"       IsChecked="{Binding Reserved1}"/>
                <CheckBox Content="Reserved 2"       IsChecked="{Binding Reserved2}"/>
            </UniformGrid>

            <Separator Margin="0,6,0,6"/>

            <TextBlock Text="Inside" FontWeight="SemiBold" Margin="0,0,0,6"/>
            <!-- Per your note: treat Inside Index as 0/1 via a checkbox -->
            <CheckBox Content="Inside" IsChecked="{Binding IsInside}"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Style="{StaticResource DialogButton}" Content="OK"     IsDefault="True" Click="Ok_Click"/>
            <Button Style="{StaticResource DialogButton}" Content="Cancel" IsCancel="True"/>
        </StackPanel>
    </Grid>
</Window>
